{
    "variables": {
        "aws_access_key": "",
        "aws_secret_key": "",
        "aws_region": "",
        "subnet_id": "",
        "source_ami": "",
        "ssh_username": "",
        "ami_users" : ""
    },
    "builders": [
        {
            "type": "amazon-ebs",
            "access_key": "{{user `aws_access_key`}}",
            "secret_key": "{{user `aws_secret_key`}}",
            "region": "{{user `aws_region`}}",
            "instance_type": "t2.micro",
            "subnet_id": "{{user `subnet_id`}}",
            "source_ami": "{{user `source_ami`}}",
            "ssh_username": "{{user `ssh_username`}}",
            "ami_name": "csye6225_{{timestamp}}",
            "ami_description": "Ubuntu AMI for CSYE 6225 - Spring 2020",
            "ami_users" : "{{user `ami_users`}}",
            "launch_block_device_mappings": [
                {
                    "device_name": "/dev/sda1",
                    "volume_size": 20,
                    "volume_type": "gp2",
                    "delete_on_termination": true
                }
            ]
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "environment_vars": [
                "FOO=foo"
            ],
            "inline": [
                "sudo apt-get update",
                "sudo apt-get install wget -y",
                "sudo apt-get install openjdk-11-jdk apache2 -y",
                "sudo groupadd tomcat",
                "sudo useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat",
                "cd /tmp",
                "sudo wget https://downloads.apache.org/tomcat/tomcat-8/v8.5.53/bin/apache-tomcat-8.5.53.tar.gz",
                "sudo mkdir /opt/tomcat",
                "sudo tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1",
                "cd /opt/tomcat",
                "sudo chgrp -R tomcat /opt/tomcat",
                "sudo chmod -R g+r conf",
                "sudo chmod -R g+x conf",
                "sudo chown -R tomcat webapps/ work/ temp/ logs/",
                "cd /etc/systemd/system",
                "sudo touch tomcat.service",
                "sudo chmod 777 tomcat.service",
                "echo '[Unit]' >> tomcat.service",
                "echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service",
                "echo 'After=syslog.target network.target' >> tomcat.service",
                "echo '[Service]' >> tomcat.service",
                "echo 'Type=forking' >> tomcat.service",
                "echo 'Environment=JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64' >> tomcat.service",
                "echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service",
                "echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service",
                "echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service",
                "echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service",
                "echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Djava.net.preferIPv4Stack=true -Djava.net.preferIPv4Addresses=true\"' >> tomcat.service",
                "echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service",
                "echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service",
                "echo 'User=tomcat' >> tomcat.service",
                "echo 'Group=tomcat' >> tomcat.service",
                "echo 'UMask=0007' >> tomcat.service",
                "echo 'RestartSec=10' >> tomcat.service",
                "echo 'Restart=always' >> tomcat.service",
                "echo '[Install]' >> tomcat.service",
                "echo 'WantedBy=multi-user.target' >> tomcat.service",
                "sudo systemctl daemon-reload",
                "sudo systemctl enable tomcat.service",
                "sudo systemctl start tomcat.service",
                "sudo systemctl status tomcat",
                "sudo apt-get install ruby -y",
                "cd /home/ubuntu",
                "wget https://aws-codedeploy-{{user `aws_region`}}.s3.{{user `aws_region`}}.amazonaws.com/latest/install",
                "chmod +x ./install",
                "sudo ./install auto",
                "echo 'Downloading cloud watch'",
                "wget https://s3.{{user `aws_region`}}.amazonaws.com/amazoncloudwatch-agent-{{user `aws_region`}}/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb",
                "echo 'cloud watch downloaded successfully'",
                "sudo chmod +x ./amazon-cloudwatch-agent.deb",
                "sudo dpkg -i -E ./amazon-cloudwatch-agent.deb",
                "echo 'cloud watch installed successfully'",
                "echo 'Enabling cloudwatch service'",
                "sudo systemctl enable amazon-cloudwatch-agent.service",
                "echo 'Starting cloudwatch service'",
                "sudo systemctl start amazon-cloudwatch-agent.service",
                "echo 'Checking the status of cloudwatch service'",
                "sudo systemctl status amazon-cloudwatch-agent.service",
                "echo 'Listing all services'",
                "sudo systemctl list-unit-files --type=service"

            ]
        }
    ]
}